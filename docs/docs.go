// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/balance": {
            "get": {
                "description": "Retrieves the user's balance and withdrawn amount",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get user's balance",
                "responses": {
                    "200": {
                        "description": "User's balance",
                        "schema": {
                            "$ref": "#/definitions/handler.balanceInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/user/balance/withdraw": {
            "post": {
                "description": "Allows users to spend their bonuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Withdraw user's bonuses",
                "parameters": [
                    {
                        "description": "Order number and withdraw amount",
                        "name": "orderData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.getSpendBonusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bonuses successfully spent",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "400": {
                        "description": "Wrong request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "402": {
                        "description": "Not enough balance",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "409": {
                        "description": "Order is already loaded",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Wrong order number",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "API for user authentication and setting an auth cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Auth",
                "parameters": [
                    {
                        "description": "Login and password",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "400": {
                        "description": "Wrong request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Wrong email or password",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "description": "Retrieves the orders associated with the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get user's orders",
                "responses": {
                    "200": {
                        "description": "A list of user's orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Order"
                            }
                        }
                    },
                    "204": {
                        "description": "A user has no orders",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads an order to the server",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Upload order",
                "parameters": [
                    {
                        "description": "Order number",
                        "name": "orderNum",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order was successfully loaded before",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "202": {
                        "description": "Order was successfully accepted",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "409": {
                        "description": "Order is already loaded",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Wrong order number",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "API for user registration and setting an auth cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "Login and password",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "400": {
                        "description": "Wrong request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "409": {
                        "description": "Login is already taken",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/user/withdrawals": {
            "get": {
                "description": "Retrieves the orders with bonuses spent by the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get orders with spent bonuses",
                "responses": {
                    "200": {
                        "description": "A list of orders with spent bonuses",
                        "schema": {
                            "$ref": "#/definitions/common.OrdersWithSpentBonuses"
                        }
                    },
                    "204": {
                        "description": "You have not spent any bonuses",
                        "schema": {
                            "$ref": "#/definitions/handler.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Order": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number"
                },
                "bonusesWithdrawn": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "common.OrdersWithSpentBonuses": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "handler.ErrorMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.balanceInfo": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "handler.credentials": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.getSpendBonusRequest": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Auth",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Gophermart API",
	Description:      "API server for users to sign up, sign it, upload orders, get and spend bonuses, and check balance",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
